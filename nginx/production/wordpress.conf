server {
        listen  80 default_server;
        listen  [::]:80 default_server;
        server_name  www.virujh.com;
#        return 301 https://www.virujh.com$request_uri;
	 return 301 https://$server_name$request_uri;
}

server {
        listen 443 ssl http2 default_server;
        listen [::]:443 ssl http2 default_server;
	server_name virujh.com www.virujh.com;


	if ($host = 'virujh.com') {
		return 301 https://www.virujh.com$request_uri;
	}
        root /var/www/html;
        index index.php index.html index.htm home.php;

	ssl_certificate "/etc/nginx/sshKey/ssl-bundle.crt";
        ssl_certificate_key "/etc/nginx/sshKey/virujh.key";


        location /blog {
                try_files $uri $uri/  /blog/index.php?$args;
	#	rewrite ^/blog/(.*)+$ /blog/index.php?$1; 
        }

	location /app{
        #        root /var/www/react;
        #       index index.html;
        #	try_fies $uri $uri/ /react;
		try_files $uri $uri/ /app/index.html?$args;

        }

	location /about {
		 try_files $uri $uri/ /about.php;		
	}

	 location /privacy-policy {
                 try_files $uri $uri/ /privacy-policy.php;
        }

	#location ~ /blog(.*) {
    	#	index index.php;
    	#	try_files $uri /blog/index.php?$1&$args;
	#}

        error_page 404 /error.php;

        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
                root /usr/share/nginx/html;
        }

        location ~ \.php$ {

		include snippets/fastcgi-php.conf;

           #     try_files $uri =404;
           #     fastcgi_split_path_info ^(.+\.php)(/.+)$;
           #    fastcgi_pass unix:/var/run/php7.2-fpm.sock;
		fastcgi_pass unix:/var/run/php/php7.2-fpm.sock;
           #     fastcgi_index index.php;
           #     include fastcgi_params;

		include fastcgi_params;
                fastcgi_intercept_errors on;
                #fastcgi_pass php;
                #The following parameter can be also included in fastcgi_params file
                fastcgi_param  SCRIPT_FILENAME $document_root$fastcgi_script_name;
        }
	
	location /api/ {
             proxy_pass    http://localhost:3000;
             proxy_http_version 1.1;
             proxy_set_header Upgrade $http_upgrade;
             proxy_set_header Connection "upgrade";
             proxy_set_header Host $host;
        }
        location /socket.io/ {
            proxy_http_version 1.1;
           proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
            proxy_pass http://localhost:3000/socket.io/;
       }
}

